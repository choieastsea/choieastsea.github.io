<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on choieastsea.github.io</title>
    <link>https://choieastsea.github.io/posts/</link>
    <description>Recent content in Posts on choieastsea.github.io</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 15 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://choieastsea.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(python) SQLAlchemy 알아보기 (3) Connection과 Session</title>
      <link>https://choieastsea.github.io/posts/11/</link>
      <pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/11/</guid>
      <description>&lt;p&gt;지금까지 sqlalchemy의 core layer에 대해 공부했고, 이제는 orm layer에 대해 알아보자. SQLAlchemy를 이용한 application을 다루게 된다면 가장 많이 접할 것이다.&lt;/p&gt;&#xA;&lt;h1 class=&#34;heading&#34; id=&#34;session&#34;&gt;&#xA;  Session&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#session&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;session은 sqlalchemy 객체로, DBMS와 ORM수준으로 &lt;strong&gt;상호작용하고 트랜잭션을 관리하기 위한 객체&lt;/strong&gt;이다.&lt;/p&gt;&#xA;&lt;p&gt;생성하는 방법으로는 두가지가 있는데, 모두 &lt;code&gt;Engine&lt;/code&gt; 인스턴스가 필요하다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Session(Engine)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;sessionmaker(bind=Engine)()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;sessionmaker는 &lt;!-- raw HTML omitted --&gt;Session을 생성하기 위한 factory&lt;!-- raw HTML omitted --&gt;이며 호출시 session을 생성해준다. Engine처럼 보통 DB당 하나씩만 있으면 된다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;주의할 점으로는 &lt;em&gt;Session 객체가 생성되었다고 해서 connection이 할당된 것은 아니라는 점&lt;/em&gt;이다. 다음 코드를 interactive mode로 실행해보자!&lt;/p&gt;</description>
    </item>
    <item>
      <title>(python) SQLAlchemy 알아보기 (2) Engine</title>
      <link>https://choieastsea.github.io/posts/10/</link>
      <pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/10/</guid>
      <description>engine / 생성(create_engine) / 주요 파라미터 / connect() / begin() / dispose()</description>
    </item>
    <item>
      <title>(python) SQLAlchemy 알아보기 (1) Dialect &amp; Pool (connection pooling)</title>
      <link>https://choieastsea.github.io/posts/9/</link>
      <pubDate>Tue, 18 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/9/</guid>
      <description>overview / core / dialect / connection pooling</description>
    </item>
    <item>
      <title>(python) DB API (PEP249)와 구현체들 (sqlite3, pymysql, mysqlclient)</title>
      <link>https://choieastsea.github.io/posts/8/</link>
      <pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/8/</guid>
      <description>DB API (PEP 249) / 주요 구현체 (Drivers)</description>
    </item>
    <item>
      <title>(setting) 맥북 초기 설정 기록하기 (homebrew, zsh, powerlevel10k, python)</title>
      <link>https://choieastsea.github.io/posts/7/</link>
      <pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/7/</guid>
      <description>homebrew / 터미널 관련 / 간단한 개발환경 세팅 /기타 맥북 설정</description>
    </item>
    <item>
      <title>(web) SPA에 대하여 (장단점, routing, 개선방법)</title>
      <link>https://choieastsea.github.io/posts/6/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/6/</guid>
      <description>SPA란 / SPA의 단점을 개선하는 방법 / 정리</description>
    </item>
    <item>
      <title>(python) wsgi 웹 서버 직접 만들어보기</title>
      <link>https://choieastsea.github.io/posts/5/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/5/</guid>
      <description>CGI를 pythonic하게 해석한 wsgi 인터페이스를 알아보고 wsgi 기반의 웹 어플리케이션과 서버를 구현해보자.</description>
    </item>
    <item>
      <title>어플리케이션이 웹 어플리케이션이 되는 방법(feat. cgi, wsgi, servlet)</title>
      <link>https://choieastsea.github.io/posts/4/</link>
      <pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/4/</guid>
      <description>우리가 작성한 어플리케이션(혹은 code/script)은 어떻게 HTTP 요청에 응답할 수 있을까?</description>
    </item>
    <item>
      <title>(python) poetry 입문과 사용법 (2)</title>
      <link>https://choieastsea.github.io/posts/3/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/3/</guid>
      <description>pyenv와 조합 /poetry 기반 프로젝트 개발하기 / dependency-group</description>
    </item>
    <item>
      <title>(python) poetry 입문과 사용법 (1)</title>
      <link>https://choieastsea.github.io/posts/2/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/2/</guid>
      <description>종속성 관리의 필요성 / poetry의 등장 / 주요 명령어 정리 / lock 파일</description>
    </item>
    <item>
      <title>(blog) hugo와 git submodule을 이용한 깃허브 블로그 구축기</title>
      <link>https://choieastsea.github.io/posts/1/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://choieastsea.github.io/posts/1/</guid>
      <description>hugo? / github pages / 블로그 초기화 과정</description>
    </item>
  </channel>
</rss>
